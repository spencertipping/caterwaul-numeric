// Linear algebra library | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// This module provides various functions for doing vector and matrix algebra. It is more oriented towards generating new values than it is towards solving equations. It represents all matrices
// and vectors as arrays that can be manipulated with the sequence macro library. This representation is not particularly fast when used directly, but the accompanying numerical compiler can
// reduce memory allocation to improve performance significantly. All operations in this library are nondestructive.

// Matrices are represented as nested arrays in row-major order. This means that x[1][2] returns the entry in the second row, third column. All matrices have the invariant that they are properly
// rectangular; that is, all row arrays are the same length.

  // Interface.
//   This vector library generalizes to an arbitrary number of coordinates, but the compiled code contains no loops. Instead, you instantiate an N-dimensional copy of the library and it compiles
//   specialized functions. So, for example, the compiled function for componentwise addition in three-dimensional space is vplus(a, b) = [a[0] + b[0], a[1] + b[1], a[2] + b[2]]. Generally you'd
//   combine this with a using[] macro to eliminate duplicate compilation:

  // | reflect(a, normal) = a /-vproj/ normal /-vscale/ -2 /-vplus/ a,
//     using [caterwaul.linear.vector(3, 'v')]

caterwaul.js_all()(function ($) {
  $.linear = capture [vector(n, prefix) = capture [

    plus  = componentwise('a, b'.qs, 'a[i] + b[i]'.qs),  minus = componentwise('a, b'.qs, 'a[i] - b[i]'.qs),  dot     = reduction('a, b'.qs, 'x + y'.qs, 'a[i] * b[i]'.qs),
    times = componentwise('a, b'.qs, 'a[i] * b[i]'.qs),  scale = componentwise('a, x'.qs, 'a[i] * x'.qs),     length2 = reduction('a, b'.qs, 'x + y'.qs, 'a[i] * a[i]'.qs),

    proj = composite('a, b'.qs, 'b /-scale/ (dot(a, b) / dot(b, b))'.qs),  orth = composite('a, b'.qs, 'a /-minus/ (a /-proj/ b)'.qs),

// Generated by SDoc 
